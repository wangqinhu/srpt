#!/usr/bin/env perl
#===============================================================================
#
# Description: Small RNA preprocess tool (srpt)
#
# Copyright (c) 2017 Northwest A&F University
# Author: Qinhu Wang
# Email: wangqinhu@nwafu.edu.cn
#
#===============================================================================

use strict;
use warnings;

srpt();

#-------------------------------------------------------------------------------
# Subroutine
#-------------------------------------------------------------------------------

sub srpt {

	# input
	my $adapter = $ARGV[0] || 'AGATCGGA';
	my $srnaseq_file = $ARGV[1] || 'sRNA.fq';
	my $knownseq_file = $ARGV[2] || 'data/refseq/FG.RR.ncRNA.fa';
	my $minrl = $ARGV[3] || 18;
	my $maxrl = $ARGV[4] || 36;
	my $prefix = $ARGV[5];
	
	# output
	unless (defined $prefix) {
		$prefix = $srnaseq_file;
		$prefix =~ s/.fq//;
		$prefix =~ s/.fastq//;
	}
	my $clipped_file = "$prefix.clip.fq";
	my $filtered_file = "$prefix.clean.fq";
	my $stat_file = "$prefix.stat.tsv";
	my $plot_file = "$prefix.dist.pdf";

	my $libsize = clip_adapter($adapter, $srnaseq_file, $clipped_file, $minrl, $maxrl);
	
	filter_known_seq($clipped_file, $knownseq_file, $filtered_file);
	
	srna_stat($filtered_file, $stat_file, $minrl, $maxrl, $libsize);
	
	plot_srna_dist($stat_file, $plot_file);
	
}

# Clip adapter sequence of fastq file
sub clip_adapter {
	
	my ($adapter, $srnaseq_file, $clipped_file, $minrl, $maxrl) = @_;
	
	# Covert adapter to capital
	$adapter =~ tr/atcgn/ATCGN/;
	$adapter = substr($adapter, 0, 6);

	my ($read_id, $read, $qual_id, $qual, $libsize);
	open (FQI, $srnaseq_file) or die "Cannot open $srnaseq_file: $!\n";
	open (FQO, ">$clipped_file") or die "Cannot open $clipped_file: $!\n";
	while ($read_id = <FQI>) {
		$read = <FQI>;
		$qual_id = <FQI>;
		$qual = <FQI>;
		$libsize++;
		chomp $read;
		my $clipped_read = $read;
		my $clipped_qual = $qual;
		my $pos = -1;
		while (($pos = index($read, $adapter, $pos)) > -1){
			$clipped_read = substr($read, 0, $pos);
			$clipped_qual = substr($qual, 0, $pos);
			last;
		}
		next if ($pos < $minrl);
		next if ($pos > $maxrl);
		print FQO $read_id, $clipped_read, "\n", $qual_id, $clipped_qual, "\n";
	}
	close FQI;
	close FQO;
	
	return $libsize;

}

sub filter_known_seq {
	
	my ($fastq_file, $seq_file, $filtered_file) = @_;
	
	unless ( -e $seq_file . '.1.ebwt') {
		system("bowtie-build $seq_file $seq_file > /dev/null");
	}
	system("bowtie -v 0 --un $filtered_file $seq_file $fastq_file > /dev/null");
	unlink("$fastq_file");
	
}

# Small RNA statistics
sub srna_stat {

	my ($file, $stat_file, $minrl, $maxrl, $libsize) = @_;

	open (IN, $file) or die "Cannot open file $file: $!\n";
	
	# read length array
	my @read_len = ();
	foreach ($minrl .. $maxrl) {
		$read_len[$_] = 0;
	}

	# 5' base hash and array
	my %base = ();
	my @base = ("T", "A", "G", "C", "N");
	foreach my $i ($minrl .. $maxrl) {
		foreach my $j (@base) {
			$base{$i}{$j} = 0;
		}
	}
	
	# stat
	my $read = undef;
	my $skip = undef;
	while (<IN>) {
		if (/^@/) {
			$read = <IN>;
			$skip = <IN>;
			$skip = <IN>;
			chomp $read;
			# abundance
			$read_len[length($read)]++;
			# content
			my $base1 = substr($read, 0, 1);
			$base{length($read)}{$base1}++;
		}
	}
	
	close IN;

	open (STAT, ">$stat_file") or die "Cannot open $stat_file: $!\n";
	print STAT "len\tfreq\tu\ta\tg\tc\tn\tlibsize\n";
	foreach ($minrl .. $maxrl) {
		# read length
		print STAT $_, "\t", $read_len[$_];
		# 5' base
		foreach my $base (@base) {
			print STAT "\t", $base{$_}{$base};
		}
		print STAT "\t$libsize\n";
	}
	close STAT;

}

# plot sRNA size distribution
sub plot_srna_dist {
	
	my ($data, $plot) = @_;
	
	my $r = <<"RCMD";
uagc<-c("#122E28", "#00DAD4", "#E68E00","#FF5490")
rl<-read.table("$data", header = T, row.names = 1)
pdf(file = "$plot", width = 3.2, height = 2)
par(mar = c(3.5,3.5,1,0),
    mgp = c(2,0.75,0),
    cex = 0.8)
barplot(t(rl[,2:5]/rl[1,7])*10,
        col = uagc,
        xlab = "Small RNA size (nt)",
        ylab = expression(paste("Frequency (x ", 10^6, " RPTM)")),
		ylim = c(0, 1),
        cex.axis = 0.8,
        cex.names = 0.8,
        cex.lab = 0.8,
        border = NA,
        legend = c("U", "A", "G", "C"),
        args.legend = list(border = NA,
                           cex = 0.6,
                           bg = "gray90",
                           box.lwd =NA)
)
dev.off()
RCMD
	
	open (R, ">plot_srna_dist.R") or die "Cannot open plot_sRNA_dist.R: $!\n";
	print R $r, "\n";
	close R;
	
	system("R CMD BATCH plot_srna_dist.R");
	unlink("plot_srna_dist.R");
	unlink("plot_srna_dist.Rout");
	
}
